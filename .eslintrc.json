{
  "env": {
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": 2018
  },
  "extends": "eslint:recommended",
  "rules": {
    "array-bracket-spacing": ["error", "never"],
    "array-callback-return": ["error", {
      "allowImplicit": true
    }],
    "arrow-body-style": ["error", "as-needed", {
      "requireReturnForObjectLiteral": false
    }],
    "arrow-parens": ["error", "always"],
    "arrow-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "block-scoped-var": "error",
    "block-spacing": ["error", "always"],
    "brace-style": ["error", "1tbs", {
      "allowSingleLine": true
    }],
    "camelcase": ["error", {
      "properties": "never",
      "ignoreDestructuring": false
    }],
    "class-methods-use-this": ["error", {
      "exceptMethods": ["render", "getInitialState", "getDefaultProps", "getChildContext", "componentWillMount", "UNSAFE_componentWillMount", "componentDidMount", "componentWillReceiveProps", "UNSAFE_componentWillReceiveProps", "shouldComponentUpdate", "componentWillUpdate", "UNSAFE_componentWillUpdate", "componentDidUpdate", "componentWillUnmount", "componentDidCatch", "getSnapshotBeforeUpdate"]
    }],
    "comma-dangle": ["error", "never"],
    "comma-spacing": ["error", {
      "before": false,
      "after": true
    }],
    "comma-style": ["error", "last", {
      "exceptions": {
        "ArrayExpression": false,
        "ArrayPattern": false,
        "ArrowFunctionExpression": false,
        "CallExpression": false,
        "FunctionDeclaration": false,
        "FunctionExpression": false,
        "ImportDeclaration": false,
        "ObjectExpression": false,
        "ObjectPattern": false,
        "VariableDeclaration": false,
        "NewExpression": false
      }
    }],
    "computed-property-spacing": ["error", "never"],
    "consistent-return": "error",
    "constructor-super": "error",
    "curly": ["error", "multi-line"],
    "default-case": ["error", {
      "commentPattern": "^no default$"
    }],
    "dot-location": ["error", "property"],
    "dot-notation": ["error", {
      "allowKeywords": true
    }],
    "eol-last": ["error", "always"],
    "eqeqeq": ["error", "always", {
      "null": "ignore"
    }],
    "for-direction": "error",
    "func-call-spacing": ["error", "never"],
    "func-names": "warn",
    "function-paren-newline": ["error", "consistent"],
    "generator-star-spacing": ["error", {
      "before": false,
      "after": true
    }],
    "getter-return": ["error", {
      "allowImplicit": true
    }],
    "global-require": "error",
    "guard-for-in": "error",
    "implicit-arrow-linebreak": ["error", "beside"],
    "indent": ["error", 2, {
      "SwitchCase": 1,
      "VariableDeclarator": 1,
      "outerIIFEBody": 1,
      "FunctionDeclaration": {
        "parameters": 1,
        "body": 1
      },
      "FunctionExpression": {
        "parameters": 1,
        "body": 1
      },
      "CallExpression": {
        "arguments": 1
      },
      "ArrayExpression": 1,
      "ObjectExpression": 1,
      "ImportDeclaration": 1,
      "flatTernaryExpressions": false,
      "ignoredNodes": ["JSXElement", "JSXElement > *", "JSXAttribute", "JSXIdentifier", "JSXNamespacedName", "JSXMemberExpression", "JSXSpreadAttribute", "JSXExpressionContainer", "JSXOpeningElement", "JSXClosingElement", "JSXFragment", "JSXOpeningFragment", "JSXClosingFragment", "JSXText", "JSXEmptyExpression", "JSXSpreadChild"],
      "ignoreComments": false
    }],
    "jsx-quotes": ["error", "prefer-double"],
    "key-spacing": ["error", {
      "beforeColon": false,
      "afterColon": true
    }],
    "keyword-spacing": ["error", {
      "before": true,
      "after": true,
      "overrides": {
        "return": {
          "after": true
        },
        "throw": {
          "after": true
        },
        "case": {
          "after": true
        }
      }
    }],
    "linebreak-style": ["warn", "windows"],
    "lines-around-directive": ["error", {
      "before": "always",
      "after": "always"
    }],
    "lines-between-class-members": ["error", "always", {
      "exceptAfterSingleLine": false
    }],
    "max-classes-per-file": ["error", 1],
    "max-len": ["error", 100, 2, {
      "ignoreUrls": true,
      "ignoreComments": false,
      "ignoreRegExpLiterals": true,
      "ignoreStrings": true,
      "ignoreTemplateLiterals": true
    }],
    "new-cap": ["error", {
      "newIsCap": true,
      "newIsCapExceptions": [],
      "capIsNew": false,
      "capIsNewExceptions": ["Immutable.Map", "Immutable.Set", "Immutable.List"]
    }],
    "new-parens": "error",
    "newline-per-chained-call": ["error", {
      "ignoreChainWithDepth": 4
    }],
    "no-alert": "warn",
    "no-array-constructor": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "always"],
    "no-confusing-arrow": ["error", {
      "allowParens": true
    }],
    "no-const-assign": "error",
    "no-constant-condition": "warn",
    "no-continue": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-else-return": ["error", {
      "allowElseIf": false
    }],
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-function": ["error", {
      "allow": ["arrowFunctions", "functions", "methods"]
    }],
    "no-empty-pattern": "error",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-func-assign": "error",
    "no-global-assign": ["error", {
      "exceptions": []
    }],
    "no-implied-eval": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": ["error", {
      "allowLoop": false,
      "allowSwitch": false
    }],
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-misleading-character-class": "error",
    "no-mixed-operators": ["error", {
      "groups": [
        ["%", "**"],
        ["%", "+"],
        ["%", "-"],
        ["%", "*"],
        ["%", "/"],
        ["/", "*"],
        ["&", "|", "<<", ">>", ">>>"],
        ["==", "!=", "===", "!=="],
        ["&&", "||"]
      ],
      "allowSamePrecedence": false
    }],
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": ["error"],
    "no-multi-spaces": ["error", {
      "ignoreEOLComments": false
    }],
    "no-multi-str": "error",
    "no-multiple-empty-lines": ["error", {
      "max": 2,
      "maxBOF": 1,
      "maxEOF": 0
    }],
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-require": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": ["error", {
      "props": true,
      "ignorePropertyModificationsFor": ["acc", "accumulator", "e", "ctx", "req", "request", "res", "response", "$scope", "staticContext"]
    }],
    "no-path-concat": "error",
    "no-plusplus": "error",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-globals": ["error", "isFinite", "isNaN", "addEventListener", "blur", "close", "closed", "confirm", "defaultStatus", "defaultstatus", "event", "external", "find", "focus", "frameElement", "frames", "history", "innerHeight", "innerWidth", "length", "location", "locationbar", "menubar", "moveBy", "moveTo", "name", "onblur", "onerror", "onfocus", "onload", "onresize", "onunload", "open", "opener", "opera", "outerHeight", "outerWidth", "pageXOffset", "pageYOffset", "parent", "print", "removeEventListener", "resizeBy", "resizeTo", "screen", "screenLeft", "screenTop", "screenX", "screenY", "scroll", "scrollbars", "scrollBy", "scrollTo", "scrollX", "scrollY", "self", "status", "statusbar", "stop", "toolbar", "top"],
    "no-restricted-properties": ["error", {
      "object": "arguments",
      "property": "callee",
      "message": "arguments.callee is deprecated"
    }, {
      "object": "global",
      "property": "isFinite",
      "message": "Please use Number.isFinite instead"
    }, {
      "object": "self",
      "property": "isFinite",
      "message": "Please use Number.isFinite instead"
    }, {
      "object": "window",
      "property": "isFinite",
      "message": "Please use Number.isFinite instead"
    }, {
      "object": "global",
      "property": "isNaN",
      "message": "Please use Number.isNaN instead"
    }, {
      "object": "self",
      "property": "isNaN",
      "message": "Please use Number.isNaN instead"
    }, {
      "object": "window",
      "property": "isNaN",
      "message": "Please use Number.isNaN instead"
    }, {
      "property": "__defineGetter__",
      "message": "Please use Object.defineProperty instead."
    }, {
      "property": "__defineSetter__",
      "message": "Please use Object.defineProperty instead."
    }, {
      "object": "Math",
      "property": "pow",
      "message": "Use the exponentiation operator (**) instead."
    }],
    "no-restricted-syntax": ["error", {
      "selector": "ForInStatement",
      "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
    }, {
      "selector": "ForOfStatement",
      "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
    }, {
      "selector": "LabeledStatement",
      "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
    }, {
      "selector": "WithStatement",
      "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
    }],
    "no-return-assign": ["error", "always"],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": ["error", {
      "props": true
    }],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-shadow": "error",
    "no-shadow-restricted-names": "error",
    "no-spaced-func": "error",
    "no-sparse-arrays": "error",
    "no-tabs": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": ["error", {
      "skipBlankLines": false,
      "ignoreComments": false
    }],
    "no-undef": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": ["error", {
      "allow": ["__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],
      "allowAfterThis": false,
      "allowAfterSuper": false,
      "enforceInMethodNames": true
    }],
    "no-unexpected-multiline": "error",
    "no-unneeded-ternary": ["error", {
      "defaultAssignment": false
    }],
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unused-expressions": ["error", {
      "allowShortCircuit": false,
      "allowTernary": false,
      "allowTaggedTemplates": false
    }],
    "no-unused-labels": "error",
    "no-unused-vars": ["error", {
      "vars": "all",
      "args": "after-used",
      "ignoreRestSiblings": true
    }],
    "no-use-before-define": ["error", {
      "functions": true,
      "classes": true,
      "variables": true
    }],
    "no-useless-catch": "error",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": ["error", {
      "ignoreDestructuring": false,
      "ignoreImport": false,
      "ignoreExport": false
    }],
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-whitespace-before-property": "error",
    "no-with": "error",
    "nonblock-statement-body-position": ["error", "beside", {
      "overrides": {}
    }],
    "object-curly-newline": ["error", {
      "ObjectExpression": {
        "minProperties": 4,
        "multiline": true,
        "consistent": true
      },
      "ObjectPattern": {
        "minProperties": 4,
        "multiline": true,
        "consistent": true
      },
      "ImportDeclaration": {
        "minProperties": 4,
        "multiline": true,
        "consistent": true
      },
      "ExportDeclaration": {
        "minProperties": 4,
        "multiline": true,
        "consistent": true
      }
    }],
    "object-curly-spacing": ["error", "always"],
    "object-property-newline": ["error", {
      "allowAllPropertiesOnSameLine": true
    }],
    "object-shorthand": ["error", "always", {
      "ignoreConstructors": false,
      "avoidQuotes": true
    }],
    "one-var": ["error", "never"],
    "one-var-declaration-per-line": ["error", "always"],
    "operator-assignment": ["error", "always"],
    "operator-linebreak": ["error", "after", {
      "overrides": {
        "=": "none"
      }
    }],
    "padded-blocks": ["error", {
      "blocks": "never",
      "classes": "never",
      "switches": "never"
    }, {
      "allowSingleLineBlocks": true
    }],
    "prefer-arrow-callback": ["error", {
      "allowNamedFunctions": false,
      "allowUnboundThis": true
    }],
    "prefer-const": ["error", {
      "destructuring": "any",
      "ignoreReadBeforeAssign": true
    }],
    "prefer-destructuring": ["error", {
      "VariableDeclarator": {
        "array": false,
        "object": true
      },
      "AssignmentExpression": {
        "array": true,
        "object": false
      }
    }, {
      "enforceForRenamedProperties": false
    }],
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": ["error", {
      "allowEmptyReject": true
    }],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "quote-props": ["error", "as-needed", {
      "keywords": false,
      "unnecessary": true,
      "numbers": false
    }],
    "quotes": ["error", "double", {
      "avoidEscape": true
    }],
    "radix": "error",
    "require-yield": "error",
    "rest-spread-spacing": ["error", "never"],
    "semi": ["error", "always"],
    "semi-spacing": ["error", {
      "before": false,
      "after": true
    }],
    "semi-style": ["error", "last"],
    "space-before-blocks": "error",
    "space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }],
    "space-in-parens": ["error", "never"],
    "space-infix-ops": "error",
    "space-unary-ops": ["error", {
      "words": true,
      "nonwords": false,
      "overrides": {}
    }],
    "spaced-comment": ["error", "always", {
      "line": {
        "exceptions": ["-", "+"],
        "markers": ["=", "!"]
      },
      "block": {
        "exceptions": ["-", "+"],
        "markers": ["=", "!", ":", "::"],
        "balanced": true
      }
    }],
    "strict": ["error", "never"],
    "switch-colon-spacing": ["error", {
      "after": true,
      "before": false
    }],
    "symbol-description": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": ["error", "never"],
    "unicode-bom": ["error", "never"],
    "use-isnan": "error",
    "valid-typeof": ["error", {
      "requireStringLiterals": true
    }],
    "vars-on-top": "error",
    "wrap-iife": ["error", "outside", {
      "functionPrototypeMethods": false
    }],
    "yield-star-spacing": ["error", "after"],
    "yoda": "error"
  }
}
